<?php
// $Id: civicrmtheme.module,v 1.1.2.2 2010/08/19 07:27:41 kurund Exp $

/**
 * Implements hook_custom_theme()
 */

function civicrmtheme_custom_theme() {
  if (arg(0) == 'civicrm') {
    // Initialize civicrm object.
    civicrm_initialize();

    // Get the menu items.
    $args = explode('/', $_GET['q']);
    $path = implode('/', $args);

    // Get the menu for above URL.
    $item = CRM_Core_Menu::get($path);

    // Check if the page is public according to CiviCRM, otherwise use the
    // administration theme.
    if (isset($item['is_public']) && $item['is_public']) {
      $theme_var = 'civicrmtheme';
    }
    else {
      $theme_var = 'civicrm_admin_theme';
    }

    global $custom_theme;
    if ($theme_var && ($custom_theme = variable_get($theme_var, '0')) != '0') {
      //drupal_set_message($custom_theme);
      //$path = drupal_get_path('module', 'system');
      //drupal_add_css($path .'/admin.css', 'module');
      return $custom_theme;
    }
  }
  return array();
}

/**
 * Implements hook_form_alter(&$form, $form_state, $form_id)
 */

function civicrmtheme_form_alter(&$form, $form_state, $form_id) {
  if ($form_id == 'system_themes_admin_form') {
    $form['admin_theme']['civicrm_admin_theme'] = array(
      '#type' => 'select',
      '#options' => $form['admin_theme']['admin_theme']['#options'],
      '#title' => t('CiviCRM Administration theme'),
      '#description' => t('Choose which theme the CiviCRM administration/backend pages should display in.'),
      '#default_value' => variable_get('civicrm_admin_theme', ''),
    );
    $form['admin_theme']['civicrmtheme'] = array(
      '#type' => 'select',
      '#options' => $form['admin_theme']['admin_theme']['#options'],
      '#title' => t('CiviCRM User theme'),
      '#description' => t('Choose which theme the CiviCRM frontend pages should display in.'),
      '#default_value' => variable_get('civicrmtheme', ''),
    );
    $form['#submit'][] = 'civcrm_form_submit_handler';
  }
}

/**
 * Custom submit handler -- Core uses path_admin_form_submit
 * to handle its saving of this form. That is over kill for
 * what is needed here.
 */

function civcrm_form_submit_handler($form, &$form_state) {
  variable_set('civicrm_admin_theme', $form_state['values']['civicrm_admin_theme']);
  variable_set('civicrmtheme', $form_state['values']['civicrmtheme']);
}
